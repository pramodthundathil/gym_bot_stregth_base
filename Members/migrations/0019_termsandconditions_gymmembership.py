# Generated by Django 5.0.6 on 2025-08-22 01:04

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('Members', '0018_alter_memberdata_address_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='TermsAndConditions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='Terms and Conditions', max_length=200)),
                ('content', models.TextField()),
                ('version', models.CharField(default='1.0', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name_plural': 'Terms and Conditions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='GymMembership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enrollment_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('unique_link', models.CharField(blank=True, max_length=100, unique=True)),
                ('full_name', models.CharField(max_length=100)),
                ('date_of_birth', models.DateField()),
                ('age', models.PositiveIntegerField()),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], max_length=10)),
                ('address', models.TextField()),
                ('city_pincode', models.CharField(max_length=100)),
                ('mobile_number', models.CharField(max_length=15)),
                ('whatsapp_number', models.CharField(max_length=15)),
                ('email_id', models.EmailField(max_length=254)),
                ('emergency_contact_name', models.CharField(max_length=100)),
                ('emergency_contact_phone', models.CharField(max_length=15)),
                ('height_cm', models.PositiveIntegerField()),
                ('weight_kg', models.DecimalField(decimal_places=2, max_digits=5)),
                ('has_medical_condition', models.BooleanField(default=False)),
                ('medical_condition_details', models.TextField(blank=True, null=True)),
                ('taking_medication', models.BooleanField(default=False)),
                ('medication_details', models.TextField(blank=True, null=True)),
                ('had_surgery_injury', models.BooleanField(default=False)),
                ('surgery_injury_details', models.TextField(blank=True, null=True)),
                ('smokes_drinks_alcohol', models.BooleanField(default=False)),
                ('family_heart_disease', models.BooleanField(default=False)),
                ('family_diabetes', models.BooleanField(default=False)),
                ('family_hypertension', models.BooleanField(default=False)),
                ('family_history_none', models.BooleanField(default=False)),
                ('primary_goal', models.CharField(choices=[('weight_loss', 'Weight Loss'), ('muscle_gain', 'Muscle Gain'), ('general_fitness', 'General Fitness'), ('strength', 'Strength'), ('endurance', 'Endurance'), ('rehab', 'Rehab'), ('other', 'Other')], max_length=20)),
                ('primary_goal_other', models.CharField(blank=True, max_length=100, null=True)),
                ('preferred_training', models.CharField(choices=[('personal_training', 'Personal Training'), ('group_training', 'Group Training'), ('crossfit', 'CrossFit'), ('yoga', 'Yoga'), ('cardio', 'Cardio'), ('weight_training', 'Weight Training'), ('other', 'Other')], max_length=20)),
                ('preferred_training_other', models.CharField(blank=True, max_length=100, null=True)),
                ('training_frequency', models.CharField(choices=[('1-2_days', '1-2 days'), ('3-4_days', '3-4 days'), ('5-6_days', '5-6 days'), ('daily', 'Daily')], max_length=20)),
                ('preferred_workout_time', models.CharField(choices=[('morning', 'Morning'), ('afternoon', 'Afternoon'), ('evening', 'Evening')], max_length=20)),
                ('occupation', models.CharField(choices=[('student', 'Student'), ('working', 'Working'), ('business', 'Business'), ('other', 'Other')], max_length=20)),
                ('activity_level', models.CharField(choices=[('sedentary', 'Sedentary'), ('moderate', 'Moderate'), ('active', 'Active')], max_length=20)),
                ('sleep_hours', models.PositiveIntegerField()),
                ('diet_type', models.CharField(choices=[('vegetarian', 'Vegetarian'), ('non_veg', 'Non-Vegetarian'), ('vegan', 'Vegan'), ('eggetarian', 'Eggetarian')], max_length=20)),
                ('plan_chosen', models.CharField(choices=[('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('half_yearly', 'Half-Yearly'), ('yearly', 'Yearly')], max_length=20)),
                ('personal_trainer_addon', models.BooleanField(default=False)),
                ('nutrition_plan_addon', models.BooleanField(default=False)),
                ('physiotherapy_addon', models.BooleanField(default=False)),
                ('payment_mode', models.CharField(choices=[('upi', 'UPI'), ('card', 'Card'), ('cash', 'Cash'), ('bank_transfer', 'Bank Transfer')], max_length=20)),
                ('payment_proof', models.ImageField(blank=True, null=True, upload_to='payment_proofs/')),
                ('digital_signature', models.TextField(blank=True, null=True)),
                ('signature_timestamp', models.DateTimeField(blank=True, null=True)),
                ('terms_accepted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('terms_version', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Members.termsandconditions')),
            ],
            options={
                'verbose_name': 'Gym Membership',
                'verbose_name_plural': 'Gym Memberships',
                'ordering': ['-created_at'],
            },
        ),
    ]
